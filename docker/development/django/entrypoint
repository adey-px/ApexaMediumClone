#!/bin/bash
# Ensure connect to db b4 spining services
# Refer to Dockerfile & Docker-compose file

# exit script if error detected or found
set -o errexit

# fail script if any pipeline cmd failed
set -o pipefail

# exit script if unset variable is found
set -o nounset

# if db user not found in env vars, set it to postgres
if [ -z "${POSTGRES_USER}" ]; then
  base_postgres_image_default_user='postgres'
  export POSTGRES_USER="${base_postgres_image_default_user}"
fi

# create & export database url
# DATABASE_URL=engine://user:password@localhost:5432/db-name
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

# python script with multi-line cmd
# check & connect if db is available
python << END
import sys
import time
import psycopg2
start = time.time()
suggest_unrecoverable_after = 30
while True:
  try:
    psycopg2.connect(
      user="${POSTGRES_USER}",
      password="${POSTGRES_PASSWORD}",
      host="${POSTGRES_HOST}",
      port="${POSTGRES_PORT}",
      dbname="${POSTGRES_DB}",
    )
    break
  except psycopg2.OperationalError as error:
    sys.stderr.write("Waiting for postgres service...")
    if time.time() - start > suggest_unrecoverable_after:
      sys.stderr.write("Postgres error: '{}'\n".format(error))
  time.sleep(1)
END

# >&2 redirect output to standard error
>&2 echo "Postgres service is available..."

# execute all args passed to script
exec "$@"